@model IEnumerable<Gestion_Compras.Models.Devolucion>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Devoluciones";
}

<style>
    .container-custom {
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        margin-right: auto;
        margin-left: auto;
        max-width: 1400px;
    }

    .table-responsive {
        position: relative;
    }

    .table-header {
        position: sticky;
        top: 0;
        z-index: 1020;
        background-color: white;
    }

    /* Estilos de filtros */
    .card-filtros .card-body {
        padding: 0.75rem 1rem;
    }

    .card-filtros .card-title {
        color: #495057;
        font-size: 1.1rem;
    }

    .card-filtros .form-control,
    .card-filtros .btn {
        font-size: 0.85rem;
    }

    /* Reducir el tamaño de la letra en la tabla */
    .table-sm td,
    .table-sm th {
        font-size: 0.9em;
        text-align: center;
        vertical-align: middle;
    }

    /* Hover effect en las filas */
    .table-hover tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.075);
    }
</style>

<div class="container-custom mt-3">

    <!-- Card de Filtros -->
    <div class="card shadow mb-2 card-filtros">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">
                    <i class="fas fa-undo me-2"></i>Gestión de Devoluciones
                </h5>
                <div class="d-flex align-items-center gap-3">
                    <div class="input-group" style="width: 400px;">
                        <input type="text" id="searchInput" class="form-control form-control-sm" placeholder="Buscar devoluciones...">
                        <button type="button" class="btn btn-primary btn-sm" id="buscarBtn">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#nuevaDevolucionModal">
                        <i class="fas fa-plus me-2"></i>Nueva Devolución
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Card de Lista de Devoluciones -->
    <div class="card shadow mb-0">
        <div class="card-header bg-light d-flex align-items-center justify-content-between">
            <strong>Historial de Devoluciones</strong>
            <div class="d-flex align-items-center gap-3">
                <div id="paginacionDevoluciones" class="d-flex align-items-center">
                    <nav>
                        <ul class="pagination pagination-sm mb-0">
                            <li class="page-item" id="btnAnteriorDev">
                                <a class="page-link" href="#" onclick="cambiarPaginaDev(-1); return false;">
                                    ← Anterior
                                </a>
                            </li>
                            <li class="page-item">
                                <span class="page-link text-muted" id="infoPaginaDev">Página 1 de 1</span>
                            </li>
                            <li class="page-item" id="btnSiguienteDev">
                                <a class="page-link" href="#" onclick="cambiarPaginaDev(1); return false;">
                                    Siguiente →
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
                <div class="d-flex align-items-center gap-2">
                    <select id="tamanoPaginaDev" class="form-select form-select-sm" style="width: auto;">
                        <option value="50">50</option>
                        <option value="100" selected>100</option>
                        <option value="200">200</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive" style="height: 600px; overflow-y: auto;">
                <table class="table table-striped table-bordered table-hover text-center table-sm mb-0">
                    <thead class="table-header">
                        <tr>
                            <th style="width: 12%;">Código</th>
                            <th style="width: 30%;">Descripción</th>
                            <th style="width: 8%;">Cantidad</th>
                            <th style="width: 20%;">Personal</th>
                            <th style="width: 20%;">Observaciones</th>
                            <th style="width: 10%;">Fecha</th>
                        </tr>
                    </thead>
                    <tbody id="devolucionesBody">
                        <!-- Filas dinámicas -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>

<!-- Modal Nueva Devolución -->
<div class="modal fade" id="nuevaDevolucionModal" tabindex="-1" aria-labelledby="nuevaDevolucionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="nuevaDevolucionModalLabel">Nueva Devolución</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="nuevaDevolucionForm">

                    <div class="mb-3">
                        <label for="fechaDevolucion" class="form-label">Fecha de Devolución</label>
                        <input type="date" id="fechaDevolucion" name="FechaDevolucion" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="itemCodigo" class="form-label">Código del Item</label>
                        <input type="text" id="itemCodigo" name="ItemCodigo" class="form-control" placeholder="Ingrese el código del item" required />
                    </div>

                    <div id="itemInfo" style="display: none;">
                        <div class="alert alert-info">
                            <h6 id="itemDescripcion">Descripción del Item</h6>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="cantidad" class="form-label">Cantidad a Devolver</label>
                        <input type="number" id="cantidad" name="Cantidad" class="form-control" min="1" placeholder="Ingrese la cantidad" required />
                    </div>

                    <div class="mb-3">
                        <label for="personalId" class="form-label">Personal</label>
                        <select id="personalId" name="PersonalId" class="form-select" required>
                            <option value="">Seleccione personal...</option>
                            @if (ViewBag.PersonalList != null)
                            {
                                foreach (var p in ViewBag.PersonalList)
                                {
                                    <option value="@p.Id">@p.NombreYApellido</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="observaciones" class="form-label">Observaciones</label>
                        <textarea id="observaciones" name="Observaciones" class="form-control" rows="3" placeholder="Ingrese observaciones (opcional)"></textarea>
                    </div>

                    <input type="hidden" id="itemId" name="ItemId" />

                    <button type="submit" class="btn btn-primary">Guardar Devolución</button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .container-custom {
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        margin-right: auto;
        margin-left: auto;
        max-width: 1400px;
    }

    .table-responsive {
        position: relative;
        height: 600px;
        overflow-y: auto;
    }

    .table-header {
        position: sticky;
        top: 0;
        z-index: 1020;
        background-color: white;
    }

    /* Unificar estilo como Buscador: tamaño y centrado */
    .table-sm td,
    .table-sm th {
        font-size: 0.9em;
        text-align: center;
        vertical-align: middle;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            let paginaActualDev = 1;
            let totalPaginasDev = 1;
            let tamanoPaginaDev = 100;

            function renderTabla(items) {
                const $tbody = $('#devolucionesBody');
                $tbody.empty();
                if (!items || items.length === 0) {
                    $tbody.append(`
                        <tr>
                            <td colspan="6" class="text-center text-muted">
                                <i class="fas fa-info-circle"></i> No se encontraron devoluciones
                            </td>
                        </tr>`);
                    return;
                }
                const frag = document.createDocumentFragment();
                items.forEach(d => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${(d.codigo || '').toUpperCase()}</td>
                        <td style="text-align: left;">${d.descripcion || ''}</td>
                        <td>${d.cantidad}</td>
                        <td>${d.personal || ''}</td>
                        <td>${d.observaciones || ''}</td>
                        <td>${new Date(d.fecha).toLocaleDateString('es-ES')}</td>`;
                    frag.appendChild(tr);
                });
                $tbody[0].appendChild(frag);
            }

            function actualizarPaginacion(total) {
                $('#infoPaginaDev').text(`Página ${paginaActualDev} de ${totalPaginasDev} (${total} devoluciones)`);
                $('#btnAnteriorDev').toggleClass('disabled', paginaActualDev <= 1);
                $('#btnSiguienteDev').toggleClass('disabled', paginaActualDev >= totalPaginasDev);
            }

            function buscar(page = 1) {
                const searchTerm = $('#searchInput').val();
                // Mostrar estado de carga
                $('#devolucionesBody').html('<tr><td colspan="6" class="text-center text-muted">Cargando...</td></tr>');
                $.ajax({
                    url: '@Url.Action("BuscarJson", "Devolucion")',
                    type: 'GET',
                    data: { searchTerm: searchTerm, pagina: page, tamanoPagina: tamanoPaginaDev },
                    success: function (response) {
                        const items = response && response.items ? response.items : [];
                        paginaActualDev = response && response.pagina ? response.pagina : 1;
                        tamanoPaginaDev = response && response.tamanoPagina ? response.tamanoPagina : tamanoPaginaDev;
                        const total = response && typeof response.total === 'number' ? response.total : items.length;
                        totalPaginasDev = Math.max(1, Math.ceil(total / tamanoPaginaDev));
                        renderTabla(items);
                        actualizarPaginacion(total);
                    },
                    error: function (xhr) {
                        console.error('Error al buscar devoluciones:', xhr.responseText);
                        $('#devolucionesBody').html('<tr><td colspan="6" class="text-center text-danger">Error al cargar</td></tr>');
                    }
                });
            }

            $('#buscarBtn').click(() => buscar(1));
            $('#searchInput').on('keypress', function (e) { if (e.which === 13) buscar(1); });
            let searchTimeout; $('#searchInput').on('input', function () { clearTimeout(searchTimeout); searchTimeout = setTimeout(() => buscar(1), 500); });
            window.cambiarPaginaDev = function (delta) { const nueva = paginaActualDev + delta; if (nueva >= 1 && nueva <= totalPaginasDev) buscar(nueva); };
            $('#tamanoPaginaDev').on('change', function(){ tamanoPaginaDev = parseInt($(this).val(), 10) || 100; buscar(1); });

            $('#nuevaDevolucionModal').on('show.bs.modal', function () {
                $('#nuevaDevolucionForm')[0].reset();
                $('#itemInfo').hide();
                $('#itemId').val('');
                // Inicializar fecha con la fecha actual (yyyy-MM-dd) para input type="date"
                const now = new Date();
                const pad = (n) => n.toString().padStart(2, '0');
                const localDate = now.getFullYear() + '-' + pad(now.getMonth() + 1) + '-' + pad(now.getDate());
                $('#fechaDevolucion').val(localDate);
            });

            // Búsqueda automática como en vista Pedido: al tener 7 caracteres
            $('#itemCodigo').on('input', function () {
                const input = this;
                const cursorPos = input.selectionStart;
                let value = $(input).val().toString().toUpperCase();
                $(input).val(value);
                input.setSelectionRange(cursorPos, cursorPos);

                if (value.length === 7) {
                    // Buscar automáticamente
                    $.ajax({
                        url: '@Url.Action("ObtenerItemPorCodigo", "Devolucion")',
                        type: 'GET',
                        data: { codigo: value },
                        success: function (response) {
                            if (response.success) {
                                $('#itemDescripcion').text(response.item.descripcion);
                                $('#itemId').val(response.item.id);
                                $('#itemInfo').show();
                                $('#cantidad').focus();
                            } else {
                                mostrarToast(response.message || 'Item no encontrado', 'warning');
                                $('#itemDescripcion').text('');
                                $('#itemId').val('');
                                $('#itemInfo').hide();
                            }
                        },
                        error: function (xhr) {
                            console.error('Error al buscar item:', xhr.responseText);
                            mostrarToast('Error al buscar item', 'error');
                            $('#itemDescripcion').text('');
                            $('#itemId').val('');
                            $('#itemInfo').hide();
                        }
                    });
                } else if (value.length < 7) {
                    // Limpiar info si aún no se completan 7 caracteres
                    $('#itemDescripcion').text('');
                    $('#itemId').val('');
                    $('#itemInfo').hide();
                }
            });

            // Inicialización segura al entrar en la vista
            $('#searchInput').val('');
            $('#devolucionesBody').html('<tr><td colspan="6" class="text-center text-muted">Cargando...</td></tr>');
            buscar(1);
            window.addEventListener('pageshow', function () { buscar(1); });

            $('#nuevaDevolucionForm').submit(function (e) {
                e.preventDefault();
                const data = {
                    FechaDevolucion: $('#fechaDevolucion').val(),
                    ItemCodigo: $('#itemCodigo').val(),
                    Cantidad: parseInt($('#cantidad').val()),
                    PersonalId: parseInt($('#personalId').val()),
                    Observaciones: $('#observaciones').val()
                };
                $.ajax({
                    url: '@Url.Action("Guardar", "Devolucion")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function (response) {
                        if (response.success) {
                            mostrarToast('Devolución registrada exitosamente', 'success');
                            $('#nuevaDevolucionModal').modal('hide');
                            $('#nuevaDevolucionForm')[0].reset();
                            $('#itemInfo').hide();
                            buscar(paginaActualDev);
                            localStorage.setItem('ultimoMovimientoStock', Date.now().toString());
                        } else {
                            mostrarToast('Error: ' + response.message, 'error');
                        }
                    },
                    error: function (xhr) {
                        console.error('Error al guardar devolución:', xhr.responseText);
                        mostrarToast('Error al guardar devolución', 'error');
                    }
                });
            });

            function mostrarToast(mensaje, tipo) {
                if ($('#toast-container').length === 0) {
                    $('body').append('<div id="toast-container" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999;"></div>');
                }
                let bgClass = ''; let iconClass = '';
                switch (tipo) {
                    case 'success': bgClass = 'bg-success text-white'; iconClass = 'fas fa-check-circle'; break;
                    case 'error': bgClass = 'bg-danger text-white'; iconClass = 'fas fa-exclamation-circle'; break;
                    case 'warning': bgClass = 'bg-warning text-dark'; iconClass = 'fas fa-exclamation-triangle'; break;
                    default: bgClass = 'bg-info text-white'; iconClass = 'fas fa-info-circle';
                }
                const toastId = 'toast-' + Date.now();
                const toastHtml = `
                    <div id="${toastId}" class="toast ${bgClass}" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="4000">
                        <div class="toast-header ${bgClass} border-0">
                            <i class="${iconClass} me-2"></i>
                            <strong class="me-auto">Notificación</strong>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                        <div class="toast-body">
                            ${mensaje}
                        </div>
                    </div>`;
                $('#toast-container').append(toastHtml);
                const toastElement = new bootstrap.Toast(document.getElementById(toastId));
                toastElement.show();
                document.getElementById(toastId).addEventListener('hidden.bs.toast', function () { $(this).remove(); });
            }
        });
    </script>
}
