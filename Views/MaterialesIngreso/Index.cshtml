@model IEnumerable<dynamic>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Lista de Ingresos";
}

<style>
    .container-custom {
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        margin-right: auto;
        margin-left: auto;
        max-width: 1400px;
    }

    .table-responsive {
        position: relative;
    }

    .table-header {
        position: sticky;
        top: 0;
        z-index: 1020;
        background-color: white;
    }

    /* Estilos de filtros */
    .card-filtros .card-body {
        padding: 0.75rem 1rem;
    }

    .card-filtros .card-title {
        color: #495057;
        font-size: 1.1rem;
    }

    .card-filtros .form-control,
    .card-filtros .btn {
        font-size: 0.85rem;
    }

    /* Reducir el tamaño de la letra en la tabla */
    .table-sm td,
    .table-sm th {
        font-size: 0.9em;
        text-align: center;
        vertical-align: middle;
    }

    /* Descripción y Proveedor alineados a la izquierda */
    #dataTable tbody tr td:nth-child(2) {
        text-align: left !important;
    }

    /* Hover effect en las filas */
    .table-hover tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.075);
    }
</style>

<div class="container-custom mt-3">

    <!-- Card de Filtros -->
    <div class="card shadow mb-2 card-filtros">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">
                    <i class="fas fa-clipboard-list me-2"></i>Lista de Ingresos
                </h5>
                <div class="d-flex align-items-center gap-3">
                    <div class="input-group" style="width: 300px;">
                        <input type="text" id="searchInput" class="form-control form-control-sm" placeholder="Buscar ingresos...">
                        <button type="button" class="btn btn-primary btn-sm" id="buscarBtn">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <a href="/Ingreso/AltaIngresos" class="btn btn-success btn-sm">
                        <i class="fas fa-plus me-2"></i>Agregar Ingreso
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Card de Lista de Ingresos -->
    <div class="card shadow mb-0">
        <div class="card-header bg-light d-flex align-items-center justify-content-between">
            <strong>Historial de Ingresos</strong>
            <div class="d-flex align-items-center gap-3">
                <div id="paginacionIngresos" class="d-flex align-items-center">
                    <nav>
                        <ul class="pagination pagination-sm mb-0">
                            <li class="page-item" id="btnAnteriorIng">
                                <a class="page-link" href="#" onclick="cambiarPaginaIng(-1); return false;">
                                    ← Anterior
                                </a>
                            </li>
                            <li class="page-item">
                                <span class="page-link text-muted" id="infoPaginaIng">Página 1 de 1</span>
                            </li>
                            <li class="page-item" id="btnSiguienteIng">
                                <a class="page-link" href="#" onclick="cambiarPaginaIng(1); return false;">
                                    Siguiente →
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
                <div class="d-flex align-items-center gap-2">
                    <select id="tamanoPaginaIng" class="form-select form-select-sm" style="width: auto;">
                        <option value="50">50</option>
                        <option value="100" selected>100</option>
                        <option value="200">200</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive" style="height: 600px; overflow-y: auto;">
                <table id="dataTable" class="table table-striped table-bordered table-hover text-center table-sm mb-0">
                    <thead class="table-header">
                        <tr>
                            <th style="width: 10%;">Código</th>
                            <th style="width: 40%;">Descripción del Ítem</th>
                            <th style="width: 5%;">Cantidad</th>
                            <th style="width: 11%;">Proveedor</th>
                            <th style="width: 10%;">Remito</th>
                            <th style="width: 7%;">O.C.</th>
                            <th style="width: 7%;">Pedido</th>
                            <th style="width: 10%;">Fecha</th>
                        </tr>
                    </thead>
                    <tbody id="ingresosBody">
                        <!-- Filas dinámicas -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            let paginaActualIng = 1;
            let totalPaginasIng = 1;
            let tamanoPaginaIng = 100;

            function renderIngresos(items) {
                const $tbody = $('#ingresosBody');
                $tbody.empty();
                if (!items || items.length === 0) {
                    return;
                }
                const frag = document.createDocumentFragment();
                items.forEach(x => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${x.itemCodigo || ''}</td>
                        <td style="text-align: left;">${x.itemDescripcion || ''}</td>
                        <td>${x.cantidadIngreso}</td>
                        <td>${x.proveedor || ''}</td>
                        <td>${x.remito || ''}</td>
                        <td>${x.ordenCompra || ''}</td>
                        <td>${x.numeroPedido || ''}</td>
                        <td>${x.fechaRemito || ''}</td>`;
                    frag.appendChild(tr);
                });
                $tbody[0].appendChild(frag);
            }

            function actualizarPaginacion(total) {
                $('#infoPaginaIng').text(`Página ${paginaActualIng} de ${totalPaginasIng} (${total} ingresos)`);
                $('#btnAnteriorIng').toggleClass('disabled', paginaActualIng <= 1);
                $('#btnSiguienteIng').toggleClass('disabled', paginaActualIng >= totalPaginasIng);
            }

            function cargarIngresos(pagina = 1) {
                const searchTerm = $('#searchInput').val();
                $.ajax({
                    url: '/Ingreso/ListJson',
                    type: 'GET',
                    data: { searchTerm: searchTerm, pagina: pagina, tamanoPagina: tamanoPaginaIng },
                    success: function (response) {
                        const items = response?.items || [];
                        paginaActualIng = response?.pagina || 1;
                        tamanoPaginaIng = response?.tamanoPagina || tamanoPaginaIng;
                        const total = (typeof response?.total === 'number') ? response.total : items.length;
                        totalPaginasIng = Math.max(1, Math.ceil(total / tamanoPaginaIng));
                        renderIngresos(items);
                        actualizarPaginacion(total);
                    },
                    error: function (xhr) {
                        console.error('Error al cargar ingresos:', xhr.responseText);
                        $('#ingresosBody').html('<tr><td colspan="8" class="text-center text-danger">Error al cargar</td></tr>');
                    }
                });
            }

            // Eventos
            $('#searchInput').on('input', function(){
                clearTimeout(window._ingrDebounce);
                window._ingrDebounce = setTimeout(() => cargarIngresos(1), 500);
            });
            $('#buscarBtn').on('click', function() {
                cargarIngresos(1);
            });
            window.cambiarPaginaIng = function(delta){ const nueva = paginaActualIng + delta; if(nueva>=1 && nueva<= totalPaginasIng) cargarIngresos(nueva); }
            $('#tamanoPaginaIng').on('change', function(){ tamanoPaginaIng = parseInt($(this).val(),10)||100; cargarIngresos(1); });

            // Inicial
            cargarIngresos(1);
        });
    </script>
}
