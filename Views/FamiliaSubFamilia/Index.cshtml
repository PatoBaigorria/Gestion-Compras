@model Gestion_Compras.ViewModels.FamiliaSubFamiliaViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Gestión de Familias y Subfamilias";
}

<style>
    .container-custom {
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        margin-right: auto;
        margin-left: auto;
        max-width: 1400px;
    }

    /* Estilos para los cards */
    .card {
        border: none;
        border-radius: 8px;
    }

    .card-header {
        border-bottom: 1px solid #dee2e6;
        font-weight: 500;
    }

    /* Estilos para formularios */
    .form-control-sm, .form-select-sm {
        font-size: 0.875rem;
    }

    .form-label {
        font-size: 0.875rem;
        font-weight: 500;
        margin-bottom: 0.25rem;
    }

    .form-check-label {
        font-size: 0.875rem;
    }

    /* Estilos para alertas */
    .alert {
        border-radius: 6px;
        font-size: 0.875rem;
    }

    /* Estilos para modales */
    .modal-content {
        border-radius: 8px;
    }

    .modal-header {
        border-bottom: 1px solid #dee2e6;
    }

    .card-filtros .card-title {
        color: #495057;
        font-size: 1.1rem;
    }
</style>

<div class="container-custom mt-3">

    <!-- Mostrar mensajes de éxito o error -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (ViewData.ModelState.IsValid == false)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>Por favor corrige los errores en el formulario.
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Card de Selección de Familia y Subfamilia -->
    <div class="card shadow mb-3 card-filtros">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="card-title mb-0">
                    <i class="fas fa-sitemap me-2"></i>Gestión de Familias y Subfamilias
                </h5>
            </div>
            
            <form id="familiaSubfamiliaForm">
                @Html.AntiForgeryToken()
                
                <div class="row g-3">
                    <!-- Selección de Familia -->
                    <div class="col-md-4">
                        <label for="familiaSelect" class="form-label">Familia</label>
                        <select id="familiaSelect" name="FamiliaId" class="form-select form-select-sm">
                            <option value="">Seleccione una familia...</option>
                            @foreach (var familia in Model.FamiliaList)
                            {
                                <option value="@familia.Id" @(familia.Id == Model.FamiliaSeleccionadaId ? "selected" : "")>
                                    @familia.Codigo - @familia.Descripcion
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="button" class="btn btn-outline-primary btn-sm w-100" id="addFamiliaBtn" 
                                data-bs-toggle="modal" data-bs-target="#addFamiliaModal">
                            <i class="fas fa-plus me-1"></i>Nueva Familia
                        </button>
                    </div>

                    <!-- Selección de Subfamilia -->
                    <div class="col-md-4">
                        <label for="subfamiliaSelect" class="form-label">Subfamilia</label>
                        <select id="subfamiliaSelect" class="form-select form-select-sm">
                            <option value="">Seleccione una subfamilia...</option>
                        </select>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="button" class="btn btn-outline-primary btn-sm w-100" id="addSubfamiliaBtn" 
                                data-bs-toggle="modal" data-bs-target="#addSubfamiliaModal">
                            <i class="fas fa-plus me-1"></i>Nueva Subfamilia
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Card de Crear Item -->
    <div class="card shadow mb-0 card-filtros">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="card-title mb-0">
                    <i class="fas fa-cube me-2"></i>Crear Nuevo Item
                </h5>
                <button type="submit" class="btn btn-success btn-sm" form="familiaSubfamiliaForm">
                    <i class="fas fa-save me-1"></i>Guardar Item
                </button>
            </div>
            <div class="row g-3">
                <!-- Descripción del Item -->
                <div class="col-md-12">
                    <label for="descripcionItem" class="form-label">Descripción del Item</label>
                    <textarea id="descripcionItem" name="Descripcion" class="form-control form-control-sm" 
                              rows="3" placeholder="Ingrese la descripción del item..." required></textarea>
                </div>
                
                <!-- Primera fila de campos -->
                <div class="col-md-3">
                    <label for="puntoDePedidoItem" class="form-label">Punto de Pedido</label>
                    <input type="number" id="puntoDePedidoItem" name="PuntoDePedido" class="form-control form-control-sm" 
                           min="0" step="0.01" required />
                </div>
                <div class="col-md-3">
                    <label for="unidadDeMedidaSelect" class="form-label">Unidad de Medida</label>
                    <select id="unidadDeMedidaSelect" name="UnidadDeMedidaId" class="form-select form-select-sm" required>
                        <option value="">Seleccione...</option>
                        @foreach (var unidad in Model.UnidadDeMedidaList)
                        {
                            <option value="@unidad.Id">@unidad.Abreviatura</option>
                        }
                    </select>
                </div>
                
                <!-- Checkboxes alineados -->
                <div class="col-md-6">
                    <label class="form-label ms-3">Configuración del Item</label>
                    <div class="d-flex gap-5 ms-3">
                        <div class="form-check">
                            <input type="checkbox" id="criticoItem" name="Critico" class="form-check-input" checked />
                            <label for="criticoItem" class="form-check-label">
                                <i class="fas fa-exclamation-triangle text-warning me-1"></i>Item Crítico
                            </label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" id="activoItem" name="Activo" class="form-check-input" checked />
                            <label for="activoItem" class="form-check-label">
                                <i class="fas fa-check-circle text-success me-1"></i>Item Activo
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<!-- Modal para agregar una nueva Familia -->
<div class="modal fade" id="addFamiliaModal" tabindex="-1" aria-labelledby="addFamiliaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addFamiliaModalLabel">Nueva Familia</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addFamiliaForm">
                    @Html.AntiForgeryToken()

                    <!-- Campo para Código de Familia -->
                    <div class="col-md-6 col-lg-5">
                        <div class="mb-3">
                            <label for="codigoFamilia" class="form-label">Código Familia</label>
                            <input type="text" id="codigoFamilia" name="Codigo" class="form-control"
                                placeholder="Código" required />
                        </div>
                    </div>

                    <!-- Campo para Descripción de Familia -->
                    <div class="col-md-6 col-lg-8">
                        <div class="mb-3">
                            <label for="descripcionFamilia" class="form-label">Descripción Familia</label>
                            <input type="text" id="descripcionFamilia" name="Descripcion" class="form-control"
                                placeholder="Descripción" required />
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary mt-3">Guardar Familia</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Modal para agregar una nueva Subfamilia -->
<div class="modal fade" id="addSubfamiliaModal" tabindex="-1" aria-labelledby="addSubfamiliaModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSubfamiliaModalLabel">Nueva Subfamilia</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addSubfamiliaForm">
                    @Html.AntiForgeryToken()

                    <!-- Campo para Descripción de Subfamilia -->
                    <div class="col-md-6 col-lg-10">
                        <div class="mb-3">
                            <label for="descripcionNuevaSubFamilia" class="form-label">Descripción Subfamilia</label>
                            <input type="text" id="descripcionNuevaSubFamilia" name="Descripcion" class="form-control"
                                placeholder="Descripción" required />
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary mt-3">Guardar Subfamilia</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <script>
        $(document).ready(function () {
            // Manejar el formulario de agregar nueva familia
            $("#addFamiliaForm").submit(function (e) {
                e.preventDefault();

                // Crear el objeto basado en los campos del formulario
                const nuevaFamilia = {
                    Codigo: $("#codigoFamilia").val(),
                    Descripcion: $("#descripcionFamilia").val()
                };

                $.ajax({
                    url: '/FamiliaSubFamilia/CrearFamilia',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(nuevaFamilia),
                    success: function (response) {
                        alert(response.message);

                        // Agregar la nueva familia al combo box
                        const nuevaOpcion = `<option value="${response.familia.id}">${response.familia.descripcion}</option>`;
                        $("#familiaSelect").append(nuevaOpcion);

                        // Seleccionar automáticamente la nueva familia
                        $("#familiaSelect").val(response.familia.id);

                        // Limpiar el formulario del modal
                        $("#codigoFamilia").val('');
                        $("#descripcionFamilia").val('');

                        // Cerrar el modal
                        $("#addFamiliaModal").modal('hide');
                    },
                    error: function (xhr, status, errorThrown) {
                        console.error('Error al crear familia:', xhr.responseText);
                        alert('Error al crear familia: ' + xhr.responseText);
                    }
                });
            });

            // Manejar el formulario de crear nueva subfamilia
            $("#addSubfamiliaForm").submit(function (e) {
                e.preventDefault();

                // Crear el objeto basado en los campos del formulario
                const nuevaSubFamilia = {
                    FamiliaId: $("#familiaSelect").val(),
                    Codigo: $("#codigoSubFamilia").val(),
                    Descripcion: $("#descripcionNuevaSubFamilia").val()
                };

                $.ajax({
                    url: '/FamiliaSubFamilia/CrearSubfamilia',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(nuevaSubFamilia),
                    success: function (response) {
                        alert(response.message);

                        // Agregar la nueva subfamilia al combo box
                        const nuevaOpcion = `<option value="${response.subFamilia.id}">${response.subFamilia.descripcion}</option>`;
                        $("#subfamiliaSelect").append(nuevaOpcion);

                        // Seleccionar automáticamente la nueva subfamilia
                        $("#subfamiliaSelect").val(response.subFamilia.id).trigger('change');

                        // Limpiar el formulario del modal
                        $("#codigoSubFamilia").val('');
                        $("#descripcionNuevaSubFamilia").val('');

                        // Cerrar el modal
                        $("#addSubfamiliaModal").modal('hide');
                    },
                    error: function (xhr, status, errorThrown) {
                        console.error('Error al crear subfamilia:', xhr.responseText);
                        alert('Error al crear subfamilia: ' + xhr.responseText);
                    }
                });
            });

            // Manejar el formulario de crear nuevo item
            $("#familiaSubfamiliaForm").submit(function (e) {
                e.preventDefault();

                // Crear el objeto basado en los campos del formulario
                const nuevoItem = {
                    Descripcion: $("#descripcionItem").val(),
                    Stock: 0, // Valor por defecto
                    PuntoDePedido: $("#puntoDePedidoItem").val(),
                    Precio: 0, // Valor por defecto
                    Critico: $("#criticoItem").is(':checked'), 
                    Activo: $("#activoItem").is(':checked'),
                    UnidadDeMedidaId: $("#unidadDeMedidaSelect").val(),
                    SubFamiliaId: $("#subfamiliaSelect").val()
                };

                $.ajax({
                    url: '/Item/PostItem',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(nuevoItem),
                    success: function (response) {
                        alert(response.message);

                        // Limpiar el formulario del item
                        $("#descripcionItem").val('');
                        $("#puntoDePedidoItem").val('');
                        $("#criticoItem").prop('checked', true); 
                        $("#activoItem").prop('checked', true);
                        $("#unidadDeMedidaSelect").val('');
                        $("#subfamiliaSelect").val('');
                    },
                    error: function (xhr, status, errorThrown) {
                        console.error('Error al crear item:', xhr.responseText);
                        alert('Error al crear item: ' + xhr.responseText);
                    }
                });
            });

            // Cargar subfamilias al seleccionar una familia
            $('#familiaSelect').change(function () {
                const familiaId = $(this).val();
                if (familiaId) {
                    $.ajax({
                        url: '/FamiliaSubFamilia/ObtenerSubfamilias/' + familiaId,
                        type: 'GET',
                        success: function (response) {
                            $('#subfamiliaSelect').empty().append('<option value=""</option>');
                            $.each(response, function (index, subfamilia) {
                                $('#subfamiliaSelect').append(`<option value="${subfamilia.id}">${subfamilia.descripcion}</option>`);
                            });
                            $('#subfamiliaSelect').select2(); // Re-inicializar Select2
                        },
                        error: function (xhr, status, errorThrown) {
                            console.error('Error al obtener subfamilias:', xhr.responseText);
                        }
                    });
                } else {
                    $('#subfamiliaSelect').empty().append('<option value=""</option>').select2(); // Re-inicializar Select2
                }
            });
        });
    </script>
}

